- name: Generate etcd certs for each master node
  shell: |
    cd /etc/kubernetes/pki/etcd
    /usr/local/bin/cfssl print-defaults csr > config.json

- name: Add localhost to the hosts
  lineinfile:
    dest: /etc/kubernetes/pki/etcd/config.json
    regexp: '"localhost",'
    line:     '"localhost",'
    insertbefore: '"example.net",'
    backup: no

- replace:
    path: /etc/kubernetes/pki/etcd/config.json
    regexp: 'CN/{s/example\.net'
    replace: "{{ inventory_hostname }}"
    backup: no

- replace:
    path: /etc/kubernetes/pki/etcd/config.json
    regexp: 'www\.example\.net'
    replace: "{{ hostvars[inventory_hostname]['ansible_usehost'] }}"
    backup: no

- replace:
    path: /etc/kubernetes/pki/etcd/config.json
    regexp: 'example\.net'
    replace: "{{ inventory_hostname }}"
    backup: no

- name: Generate etcd peer certs for each master node
  shell: |
    cd /etc/kubernetes/pki/etcd
    /usr/local/bin/cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server config.json | /usr/local/bin/cfssljson -bare server


- name: Generate etcd server certs for each master node
  shell: |
    cd /etc/kubernetes/pki/etcd
    /usr/local/bin/cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=peer config.json | /usr/local/bin/cfssljson -bare peer


- name: Download etcd
  get_url:
    url: https://storage.googleapis.com/etcd/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-amd64.tar.gz
    dest: /tmp/
    mode: 0710

- name: Unarchive etcd
  unarchive:
    src: /tmp/etcd-{{etcd_version}}-linux-amd64.tar.gz
    dest: /tmp/
    remote_src: yes

- name: Install etcd
  copy:
    src: /tmp/etcd-{{ etcd_version }}-linux-amd64/etcd
    dest: /usr/local/bin/etcd
    mode: 0710
    remote_src: yes

- name: Install etcdctl
  copy:
    src: /tmp/etcd-{{ etcd_version }}-linux-amd64/etcdctl
    dest: /usr/local/bin/etcdctl
    mode: 0710
    remote_src: yes

- name: Copy etcd config file
  template:
    src: etcd.service
    dest: /etc/systemd/system/etcd.service

- name: Copy etcd.env config file
  template:
    src: etcd.env
    dest: /etc/etcd.env

- name: start and enable etcd
  systemd:
    name: etcd
    enabled: yes
    daemon_reload: yes
    state: restarted
